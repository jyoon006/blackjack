// Generated by CoffeeScript 1.10.0
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

window.Message = (function(superClass) {
  extend(Message, superClass);

  function Message() {
    return Message.__super__.constructor.apply(this, arguments);
  }

  Message.prototype.className = 'message';

  Message.prototype.template = _.template('<h2></h2>');

  Message.prototype.initialize = function() {
    this.collection.on('add remove change', (function(_this) {
      return function() {
        return _this.render();
      };
    })(this));
    return this.render();
  };

  Message.prototype.render = function() {
    this.$el.children().detach();
    this.$el.html(this.template);
    return this.$('h2').text('New Game');
  };

  return Message;

})(Backbone.View);
